{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "DataOrchestration-ADF"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Product SCD2 Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Product SCD2 Pipeline",
				"activities": [
					{
						"name": "Copy data Source to Staging",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from dbo.product_table where Sync_Flag=0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table dbo.product_dim_stg",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "product_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "product_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "product_name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "product_name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "unit_price",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "unit_price",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "product_desc",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "product_desc",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "eligible_promotion",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "eligible_promotion",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceProductTable",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "TargetProductStaging",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "scd1 dataflow",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy data Source to Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_Product_SCD1",
								"type": "DataFlowReference"
							},
							"staging": {
								"linkedService": {
									"referenceName": "AzureDataLakeStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "sinkdata/SynapseStage"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Update Source Sync Flag",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "scd1 dataflow",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "update dbo.product_table set Sync_Flag=1;\n\nselect getdate();",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SourceProductTable",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_DIM_Product_SCD2_Synapse')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalyticsLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "product_key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "product_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "product_name",
						"type": "varchar"
					},
					{
						"name": "unit_price",
						"type": "float",
						"precision": 15
					},
					{
						"name": "product_desc",
						"type": "varchar"
					},
					{
						"name": "eligible_promotion",
						"type": "int",
						"precision": 10
					},
					{
						"name": "is_active",
						"type": "int",
						"precision": 10
					},
					{
						"name": "start_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "end_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "product_dim_scd2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_Product_SCD2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "DF_Product_SCD2",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "TargetProductStaging",
								"type": "DatasetReference"
							},
							"name": "sourceStaging"
						},
						{
							"dataset": {
								"referenceName": "TargetProductTable",
								"type": "DatasetReference"
							},
							"name": "sourceTarget"
						},
						{
							"dataset": {
								"referenceName": "TargetProductTable",
								"type": "DatasetReference"
							},
							"name": "MaxSurrogateKey"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_DIM_Product_SCD2_Synapse",
								"type": "DatasetReference"
							},
							"name": "UpdateSink"
						},
						{
							"dataset": {
								"referenceName": "DS_DIM_Product_SCD2_Synapse",
								"type": "DatasetReference"
							},
							"name": "InsertNewsink"
						},
						{
							"dataset": {
								"referenceName": "DS_DIM_Product_SCD2_Synapse",
								"type": "DatasetReference"
							},
							"name": "InsertExistingProduct"
						}
					],
					"transformations": [
						{
							"name": "ExistsForUpdate"
						},
						{
							"name": "ProductKeyAddedDateLookup"
						},
						{
							"name": "UpdatedDateDerivedColumn"
						},
						{
							"name": "UpdateAlterRow"
						},
						{
							"name": "InsertNewRecordExists"
						},
						{
							"name": "JoinForSurrogateKeyNew"
						},
						{
							"name": "DerivedColumns"
						},
						{
							"name": "SurrogateKeyCalculation"
						},
						{
							"name": "JoinforSurrogateKeyExisting"
						},
						{
							"name": "SurrogateKeyCalculationExisting"
						},
						{
							"name": "DerivedColumnExisting"
						}
					],
					"script": "source(output(\n\t\tproduct_id as integer,\n\t\tproduct_name as string,\n\t\tunit_price as double,\n\t\tproduct_desc as string,\n\t\teligible_promotion as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> sourceStaging\nsource(output(\n\t\tproduct_key as integer,\n\t\tproduct_id as integer,\n\t\tproduct_name as string,\n\t\tunit_price as double,\n\t\tproduct_desc as string,\n\t\teligible_promotion as integer,\n\t\tadded_date as timestamp,\n\t\tupdated_date as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> sourceTarget\nsource(output(\n\t\tMaxSurrogateKey as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select isNull(max(product_key),0) as MaxSurrogateKey from dbo.product_dim',\n\tformat: 'query') ~> MaxSurrogateKey\nsourceStaging, sourceTarget exists(sourceStaging@product_id == sourceTarget@product_id,\n\tnegate:false,\n\tbroadcast: 'auto')~> ExistsForUpdate\nExistsForUpdate, sourceTarget lookup(sourceStaging@product_id == sourceTarget@product_id,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> ProductKeyAddedDateLookup\nProductKeyAddedDateLookup derive(updated_date = currentTimestamp(),\n\t\tis_active = 0) ~> UpdatedDateDerivedColumn\nUpdatedDateDerivedColumn alterRow(updateIf(true())) ~> UpdateAlterRow\nsourceStaging, sourceTarget exists(sourceStaging@product_id == sourceTarget@product_id,\n\tnegate:true,\n\tbroadcast: 'auto')~> InsertNewRecordExists\nInsertNewRecordExists, MaxSurrogateKey join(true(),\n\tjoinType:'cross',\n\tbroadcast: 'auto')~> JoinForSurrogateKeyNew\nSurrogateKeyCalculation derive(product_key = MaxSurrogateKey+s_key,\n\t\tadded_date = currentTimestamp()) ~> DerivedColumns\nJoinForSurrogateKeyNew keyGenerate(output(s_key as long),\n\tstartAt: 1L) ~> SurrogateKeyCalculation\nExistsForUpdate, MaxSurrogateKey join(true(),\n\tjoinType:'cross',\n\tbroadcast: 'auto')~> JoinforSurrogateKeyExisting\nJoinforSurrogateKeyExisting keyGenerate(output(s_key as long),\n\tstartAt: 1L) ~> SurrogateKeyCalculationExisting\nSurrogateKeyCalculationExisting derive(product_key = MaxSurrogateKey+s_key,\n\t\tadded_date = currentTimestamp()) ~> DerivedColumnExisting\nUpdateAlterRow sink(input(\n\t\tproduct_key as integer,\n\t\tproduct_id as integer,\n\t\tproduct_name as string,\n\t\tunit_price as double,\n\t\tproduct_desc as string,\n\t\teligible_promotion as integer,\n\t\tis_active as integer,\n\t\tstart_date as timestamp,\n\t\tend_date as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['product_id'],\n\tformat: 'table',\n\tstaged: true,\n\tmapColumn(\n\t\tproduct_key,\n\t\tproduct_id = sourceStaging@product_id,\n\t\tproduct_name = sourceStaging@product_name,\n\t\tunit_price = sourceStaging@unit_price,\n\t\tproduct_desc = sourceStaging@product_desc,\n\t\teligible_promotion = sourceStaging@eligible_promotion,\n\t\tstart_date = added_date,\n\t\tend_date = updated_date,\n\t\tis_active\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> UpdateSink\nDerivedColumns sink(input(\n\t\tproduct_key as integer,\n\t\tproduct_id as integer,\n\t\tproduct_name as string,\n\t\tunit_price as double,\n\t\tproduct_desc as string,\n\t\teligible_promotion as integer,\n\t\tis_active as integer,\n\t\tstart_date as timestamp,\n\t\tend_date as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tmapColumn(\n\t\tproduct_key,\n\t\tproduct_id,\n\t\tproduct_name,\n\t\tunit_price,\n\t\tproduct_desc,\n\t\teligible_promotion,\n\t\tstart_date = added_date\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> InsertNewsink\nDerivedColumnExisting sink(input(\n\t\tproduct_key as integer,\n\t\tproduct_id as integer,\n\t\tproduct_name as string,\n\t\tunit_price as double,\n\t\tproduct_desc as string,\n\t\teligible_promotion as integer,\n\t\tis_active as integer,\n\t\tstart_date as timestamp,\n\t\tend_date as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tmapColumn(\n\t\tproduct_key,\n\t\tproduct_id,\n\t\tproduct_name,\n\t\tunit_price,\n\t\tproduct_desc,\n\t\teligible_promotion,\n\t\tstart_date = added_date\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> InsertExistingProduct"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_DIM_Product_SCD2_Synapse')]"
			]
		}
	]
}